*** Settings ***
Force Tags      pybot   jybot
Suite Setup     Login and Move Test Files
Suite Teardown  Remove Test Files and Close Connections
Test Teardown   Remove Directory  ${target}  True
Resource        resources/ssh_library_resources.txt
Library         OperatingSystem

*** Test Cases ***
Get Dir To Existing Local Path
    [Setup]  Create Directory  ${LOCAL TMPDIR}
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root  ${target}
    Directory Should Exist With Content  ${target}/test_root

Get Dir With Ending Slash To Existing Local Path
    [Setup]  Create Directory  ${LOCAL TMPDIR}
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root/  ${target}
    Directory Should Exist With Content  ${target}/test_root

Get Dir To Non-Existing Local Path
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Not Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root  ${target}
    Directory Should Exist With Content  ${target}

Get Dir With Ending Slash To Non-Existing Local Path
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Not Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root/  ${target}
    Directory Should Exist With Content  ${target}

Get Dir Including Subdirectories To Existing Local Destination
    [Setup]  Create Directory  ${LOCAL TMPDIR}
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root  ${target}  recursive=True
    Directory Should Exist Including Subdirectories  ${target}/test_root

Get Dir Including Subdirectories To Non Existing Local Destination
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Not Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root  ${target}  recursive=True
    Directory Should Exist Including Subdirectories  ${target}

Get Dir To Non-Existing Relative Local Path
    ${target} =  Set Variable  tmpdir
    Directory Should Not Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}/test_root  ${target}
    Directory Should Exist With Content  ${target}

Get Dir To Current Local Destination
    ${target} =  Set Variable  .${/}test_root
    Directory Should Not Exist  ${target}
    SSHLibrary.Get Dir  ${USER HOME}${/}test_root  .
    Directory Should Exist With Content  ${target}

Get Dir Using Relative Source
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Directory Should Not Exist  ${target}
    SSHLibrary.Get Dir  test_root  ${target}
    Directory Should Exist With Content  ${target}

*** Keywords ***
Directory Should Exist With Content
    [Arguments]  ${destination}
    File Should Exist  ${destination}/${TEST SCRIPT NAME}
    File Should Exist  ${destination}/${REPEAT TEST SCRIPT NAME}
    Directory Should Not Exist  ${destination}/subdir

Directory Should Exist Including Subdirectories
    [Arguments]  ${destination}
    File Should Exist  ${destination}/${TEST SCRIPT NAME}
    File Should Exist  ${destination}/${REPEAT TEST SCRIPT NAME}
    Directory Should Exist  ${destination}/subdir
    File Should Exist  ${destination}/subdir/${INTERACTIVE TEST SCRIPT NAME}

Login And Move Test Files
    Login As Valid User
    Put File  ${TEST SCRIPT}  ${USER HOME}/test_root/
    Put File  ${INTERACTIVE TEST SCRIPT}  ${USER HOME}/test_root/subdir/
    Put File  ${REPEAT TEST SCRIPT}  ${USER HOME}/test_root/

Remove Test Files and Close Connections
    Execute Command  rm -rf ${USER HOME}/test_root
    Close All Connections
