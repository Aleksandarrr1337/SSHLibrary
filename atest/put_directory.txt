*** Settings ***
Force Tags      pybot   jybot
Suite Setup     Login As Valid User
Suite Teardown  Close All Connections
Test Teardown   Execute Command  rm -rf ${target}
Resource        resources/ssh_library_resources.txt

*** Test Cases ***
Put Directory To Absolute Destination
    ${target} =  Set Variable  ${USER HOME}/new_dir/
    Remote Directory Should Not Exist  ${target}
    Put Directory  ${TEXTFILES}  ${target}
    Remote Directory Should Exist With Content  ${target}/textfiles

Put Directory To Relative Destination
    ${target} =  Set Variable  new_dir/
    Remote Directory Should Not Exist  ${target}
    Put Directory  ${TEXTFILES}   ${target}
    Remote Directory Should Exist With Content  ${target}/textfiles

Put Directory To Home Directory
    ${target} =  Set Variable  ./textfiles
    Remote Directory Should Not Exist  ${target}
    Put Directory  ${TEXTFILES}  ./
    Remote Directory Should Exist With Content  ${target}

Put Directory To Different Name
    ${target} =  Set Variable  ${USER HOME}/another_dir_name
    Remote Directory Should Not Exist  ${target}
    Put Directory  ${TEXTFILES}   ${target}
    Remote Directory Should Exist With Content  ${target}

Put Directory Including Subdirectories
    ${target} =  Set Variable  ${USER HOME}/new_dir/
    Remote Directory Should Not Exist  ${target}
    Put Directory  ${TEXTFILES}  ${target}  recursive=True
    Remote Directory Should Exist With Subdirectories  ${target}/textfiles

*** Keywords ***
Remote Directory Should Not Exist
    [Arguments]  ${expected}
    ${rc} =  Execute Command  test -d ${expected}  return_stdout=${false}  return_rc=${true}
    Should Be Equal As Integers  ${rc}  1

Remote Directory Should Exist With Content
    [Arguments]  ${expected}
    ${stdout} =  Execute Command  ls ${expected}
    Should Contain  ${stdout}  ${TEST FILE NAME}
    Should Contain  ${stdout}  ${TEST FILE 2 NAME}
    Should Contain  ${stdout}  ${FILE WITH NEWLINES NAME}
    Should Not Contain  ${stdout}  special

Remote Directory Should Exist With Subdirectories
    [Arguments]  ${expected}
    ${stdout} =  Execute Command  ls ${expected}
    Should Contain  ${stdout}  ${TEST FILE NAME}
    Should Contain  ${stdout}  ${TEST FILE 2 NAME}
    Should Contain  ${stdout}  ${FILE WITH NEWLINES NAME}
    Should Contain  ${stdout}  special
    ${stdout} =  Execute Command  ls ${expected}/special
    Should Contain  ${stdout}  ${FILE WITH SPECIAL CHARS NAME}
