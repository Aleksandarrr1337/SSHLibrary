*** Settings ***
Force Tags      pybot   jybot
Suite Setup     Login and Move Test Files
Suite Teardown  Remove Test Files and Close Connections
Test Teardown   Remove Directory  ${target}  recursive=True
Resource        resources/ssh_library_resources.txt
Library         OperatingSystem  WITH NAME  OS

*** Test Cases ***
Get Directory To Existing Local Path
    [Setup]  Create Directory  ${LOCAL TMPDIR}
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    OS.Directory Should Exist  ${target}
    Get Directory  ${REMOTE_TEST_ROOT}  ${target}
    Directory Should Exist With Content  ${target}${/}${TEST ROOT NAME}

Get Directory To Non-Existing Local Path
    ${target} =  Set Variable  tmpdir
    OS.Directory Should Not Exist  ${target}
    SSH.Get Directory  ${REMOTE_TEST_ROOT}${/}  ${target}
    Directory Should Exist With Content  ${target}

Get Directory Including Subdirectories To Existing Local Path
    [Setup]  Create Directory  ${LOCAL TMPDIR}
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    OS.Directory Should Exist  ${target}
    Get Directory  ${REMOTE_TEST_ROOT}  ${target}  recursive=True
    Directory Should Exist Including Subdirectories  ${target}${/}${TEST ROOT NAME}

Get Directory Including Subdirectories To Non-Existing Local Path
    ${target} =  Set Variable  my/own/tmpdir
    OS.Directory Should Not Exist  ${target}
    Get Directory  ${REMOTE_TEST_ROOT}  ${target}  recursive=True
    Directory Should Exist Including Subdirectories  ${target}
    ${target} =  Set Variable  my

Get Directory To Current Local Path
    ${target} =  Set Variable  .${/}${TEST ROOT NAME}
    OS.Directory Should Not Exist  ${target}
    Get Directory  ${REMOTE_TEST_ROOT}  .
    Directory Should Exist With Content  ${target}

Get Directory Using Relative Source
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    OS.Directory Should Not Exist  ${target}
    Get Directory  ${TEST ROOT NAME}  ${target}
    Directory Should Exist With Content  ${target}

Get Directory Should Fail When Source Does Not Exists
    ${target} =  Set Variable  ${LOCAL TMPDIR}
    Run Keyword And Expect Error  There was no source path matching 'non-existing'  SSH.Get Directory  non-existing
    OS.Directory Should Not Exist  ${target}

*** Keywords ***
Directory Should Exist With Content
    [Arguments]  ${destination}
    OS.File Should Exist  ${destination}${/}${TEST FILE NAME}
    OS.File Should Exist  ${destination}${/}${TEST FILE 2 NAME}
    OS.File Should Exist  ${destination}${/}${FILE WITH NEWLINES NAME}
    OS.File Should Not Exist  ${destination}${/}${SPECIAL TEXTFILES NAME}
    OS.Directory Should Not Exist  ${destination}${/}${SPECIAL TEXTFILES NAME}

Directory Should Exist Including Subdirectories
    [Arguments]  ${destination}
    OS.File Should Exist  ${destination}${/}${TEST FILE NAME}
    OS.File Should Exist  ${destination}${/}${TEST FILE 2 NAME}
    OS.File Should Exist  ${destination}${/}${FILE WITH NEWLINES NAME}
    OS.Directory Should Exist  ${destination}${/}${SPECIAL TEXTFILES NAME}
    OS.File Should Exist  ${destination}${/}${SPECIAL TEXTFILES NAME}/${FILE WITH SPECIAL CHARS NAME}
